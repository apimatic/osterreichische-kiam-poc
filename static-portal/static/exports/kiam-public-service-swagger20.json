{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Kiam Public Service",
    "contact": {}
  },
  "host": "kiamservice-public.prod.kiam.postag.azureabnprod.postag.intern",
  "basePath": "/",
  "securityDefinitions": {},
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/companies": {
      "post": {
        "description": "",
        "summary": "CreateCompanyWithBusinessUser",
        "tags": [
          "Company"
        ],
        "operationId": "CreateCompanyWithBusinessUser",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "captchaToken",
            "in": "header",
            "required": false,
            "type": "string",
            "description": "This parameter is used to provide the captcha specific value for a token, solution or how else a parameter is called in a captcha solution."
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "Data of the newly created company and related user.\r\n             User salutation can have values M or W, M means male and W means female, X means other.\r\n             Possible values for users' address type: 1 or 2. 1 means main address, 2 means secondary address.\r\n             If password is not defined or is null, created user will receive an e-mail and will have to set password using received link.",
            "schema": {
              "$ref": "#/definitions/CreateCompanyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User was created successfully.",
            "headers": {}
          },
          "400": {
            "description": "Invalid request.\r\n            \r\n             Usual invalid request response format:\r\n             Error code is validation_error. Information about the error can be found in the details field.\r\n             Target describes which field is invalid, validation error code defines the more detailed validation error case.\r\n             There could be multiple errors per field. See example response.\r\n            \r\n             List of error codes in format [error code] - [optional description] - [fields which can have this validation error] for user fields and company fields:\r\n            \r\n             Company fields\r\n            \r\n             required - company_name\r\n             invalid - company_legal_form_id, company_email_address, company_phone_country_code, company_phone_area_code, company_phone_number, company_mobile_country_code, company_mobile_area_code, company_mobile_number, company_countryIsoAlpha2Code\r\n            \r\n             User fields\r\n             \r\n             required -  Required field. - username, first_name, last_name, registration_origin\r\n             username_not_available - Username is already taken. - username\r\n             too_short - The input value is too short. - username, first_name, last_name\r\n             too_long - The input value is too long. - username, first_name, last_name\r\n             no_titles_allowed - No titles allowed, E.g. BSc. - first_name, last_name\r\n             no_company_types_allowed - No company types allowed. E.g. GmbH. - first_name, last_name\r\n             person_too_young - Person with specified birthdate is too young. - birthdate\r\n             invalid - first_name, last_name, username, phone_country_code, phone_area_code, phone_number, mobile_country_code, mobile_area_code, mobile_number, user_addressX_countryIsoAlpha2Code (where X is the index of the address in the array, starting from 0, e.G. user_address0_countryIsoAlpha2Code)\r\n             new_password_invalid - the new password is invalid - password\r\n             captcha_error - Invalid Captcha token.",
            "headers": {}
          }
        }
      }
    },
    "/doubleOptIn/initiate": {
      "post": {
        "description": "",
        "summary": "ResendRegistrationConfirmation",
        "tags": [
          "DoubleOptIn"
        ],
        "operationId": "ResendRegistrationConfirmation",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "Request with username (email address) of the user.",
            "schema": {
              "$ref": "#/definitions/ResendRegistrationConfirmationRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Registration confirmation e-mail was sent.",
            "headers": {}
          },
          "404": {
            "description": "User with username was not found.",
            "schema": {
              "$ref": "#/definitions/KiamProblemDetails"
            },
            "headers": {}
          },
          "409": {
            "description": "An error occurred",
            "schema": {
              "$ref": "#/definitions/KiamProblemDetails"
            },
            "headers": {}
          }
        }
      }
    },
    "/doubleOptIn/confirm": {
      "post": {
        "description": "",
        "summary": "ConfirmRegistration",
        "tags": [
          "DoubleOptIn"
        ],
        "operationId": "ConfirmRegistration",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ConfirmRegistrationRequest"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Registration confirmation token accepted. Response contains callback URL.",
            "schema": {
              "$ref": "#/definitions/RegistrationConfirmationResponse"
            },
            "headers": {}
          },
          "200": {
            "description": "Invalid, expired or already used registration confirmation token.",
            "schema": {
              "$ref": "#/definitions/KiamProblemDetails"
            },
            "headers": {}
          }
        }
      }
    },
    "/users": {
      "post": {
        "description": "",
        "summary": "CreateUser",
        "tags": [
          "PublicUser"
        ],
        "operationId": "CreateUser",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "captchaToken",
            "in": "header",
            "required": false,
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreateUserRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {}
          }
        }
      }
    },
    "/validations/validateUsername": {
      "post": {
        "description": "",
        "summary": "ValidateUsername",
        "tags": [
          "Validations"
        ],
        "operationId": "ValidateUsername",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/StringFieldValue"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Value is valid.",
            "headers": {}
          },
          "200": {
            "description": "Value is invalid. Main error code is validation_error.\r\n            Detailed validation error codes can be found in the details field.\r\n            There could be multiple errors.\r\n            \r\n            List of error codes in format [error code] - [description]:\r\n            \r\n            required -  Required field.\r\n            invalid - Invalid format, username should be an email address.\r\n            too_short - The input value is too short.\r\n            too_long - The input value is too long.\r\n            username_not_available - Username is already taken.",
            "schema": {
              "$ref": "#/definitions/KiamProblemDetails"
            },
            "headers": {}
          },
          "400": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/KiamProblemDetails"
            },
            "headers": {}
          }
        }
      }
    },
    "/validations/validateDuplicateUser": {
      "post": {
        "description": "",
        "summary": "ValidateForDuplicateUser",
        "tags": [
          "Validations"
        ],
        "operationId": "ValidateForDuplicateUser",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidateForDuplicateUserRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Data is valid, it is not a duplicate user.",
            "headers": {}
          },
          "200": {
            "description": "Data is invalid, a user with the same data already exists. Main error code is validation_error.\r\n            Validation error code is duplicate_user",
            "schema": {
              "$ref": "#/definitions/KiamProblemDetails"
            },
            "headers": {}
          },
          "400": {
            "description": "Validation error code is duplicate_user",
            "schema": {
              "$ref": "#/definitions/KiamProblemDetails"
            },
            "headers": {}
          }
        }
      }
    }
  },
  "definitions": {
    "AddressForDuplicateValidation": {
      "title": "AddressForDuplicateValidation",
      "type": "object",
      "properties": {
        "countryIsoAlpha2Code": {
          "type": "string"
        },
        "postalCode": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "street": {
          "type": "string"
        },
        "doorNumber": {
          "type": "string"
        },
        "houseNumber": {
          "type": "string"
        }
      }
    },
    "ConfirmRegistrationRequest": {
      "title": "ConfirmRegistrationRequest",
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        },
        "applicationName": {
          "type": "string"
        }
      }
    },
    "CreateAddressRequest": {
      "title": "CreateAddressRequest",
      "type": "object",
      "properties": {
        "addressType": {
          "type": "integer",
          "format": "int32"
        },
        "countryIsoAlpha2Code": {
          "type": "string"
        },
        "postalCode": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "street": {
          "type": "string"
        },
        "street2": {
          "type": "string"
        },
        "doorNumber": {
          "type": "string"
        },
        "houseNumber": {
          "type": "string"
        },
        "postAddressCode": {
          "type": "string"
        }
      }
    },
    "CreateCompanyRequest": {
      "title": "CreateCompanyRequest",
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/CreateUserRequest"
        },
        "companyName": {
          "type": "string"
        },
        "emailAddress": {
          "type": "string"
        },
        "phone": {
          "$ref": "#/definitions/Phone2"
        },
        "mobile": {
          "$ref": "#/definitions/Phone2"
        },
        "mainAddress": {
          "$ref": "#/definitions/CreateMainAddressRequest"
        },
        "registrationSucceededCallbackUrl": {
          "type": "string"
        },
        "uid": {
          "type": "string"
        },
        "legalFormId": {
          "type": "integer",
          "format": "int32"
        },
        "organizationNumber": {
          "type": "string"
        },
        "sapDebitor": {
          "type": "string"
        }
      }
    },
    "CreateMainAddressRequest": {
      "title": "CreateMainAddressRequest",
      "type": "object",
      "properties": {
        "countryIsoAlpha2Code": {
          "type": "string"
        },
        "postalCode": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "street": {
          "type": "string"
        },
        "street2": {
          "type": "string"
        },
        "doorNumber": {
          "type": "string"
        },
        "houseNumber": {
          "type": "string"
        },
        "postAddressCode": {
          "type": "string"
        }
      }
    },
    "CreateUserRequest": {
      "title": "CreateUserRequest",
      "type": "object",
      "properties": {
        "password": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "salutation": {
          "type": "string"
        },
        "firstname": {
          "type": "string"
        },
        "lastname": {
          "type": "string"
        },
        "birthdate": {
          "type": "string",
          "format": "date-time"
        },
        "titleBeforeName": {
          "type": "string"
        },
        "titleAfterName": {
          "type": "string"
        },
        "phone": {
          "$ref": "#/definitions/Phone2"
        },
        "mobile": {
          "$ref": "#/definitions/Phone2"
        },
        "addresses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CreateAddressRequest"
          }
        },
        "registrationSucceededCallbackUrl": {
          "type": "string"
        },
        "registrationOrigin": {
          "type": "string"
        },
        "marketingAgreement": {
          "type": "boolean"
        },
        "newsletter": {
          "type": "boolean"
        }
      }
    },
    "Phone2": {
      "title": "Phone2",
      "type": "object",
      "properties": {
        "countryCode": {
          "type": "string"
        },
        "areaCode": {
          "type": "string"
        },
        "number": {
          "type": "string"
        }
      }
    },
    "RegistrationConfirmationResponse": {
      "title": "RegistrationConfirmationResponse",
      "type": "object",
      "properties": {
        "callbackUrl": {
          "type": "string"
        }
      }
    },
    "ResendRegistrationConfirmationRequest": {
      "title": "ResendRegistrationConfirmationRequest",
      "type": "object",
      "properties": {
        "username": {
          "type": "string"
        },
        "applicationName": {
          "type": "string"
        }
      }
    },
    "StringFieldValue": {
      "title": "StringFieldValue",
      "type": "object",
      "properties": {
        "value": {
          "type": "string"
        }
      }
    },
    "ValidateForDuplicateUserRequest": {
      "title": "ValidateForDuplicateUserRequest",
      "type": "object",
      "properties": {
        "firstname": {
          "type": "string"
        },
        "lastname": {
          "type": "string"
        },
        "ssoId": {
          "type": "integer",
          "format": "int32"
        },
        "mainAddress": {
          "$ref": "#/definitions/AddressForDuplicateValidation"
        }
      }
    },
    "KiamProblemDetails": {
      "title": "KiamProblemDetails",
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "status": {
          "type": "integer",
          "format": "int32"
        },
        "detail": {
          "type": "string"
        },
        "instance": {
          "type": "string"
        },
        "error": {
          "$ref": "#/definitions/Legacy.ErrorInfo"
        }
      }
    },
    "Legacy.ErrorData": {
      "title": "Legacy.ErrorData",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "Legacy.ErrorInfo": {
      "title": "Legacy.ErrorInfo",
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "target": {
          "type": "string"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Legacy.ErrorData"
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "Company",
      "description": ""
    },
    {
      "name": "DoubleOptIn",
      "description": ""
    },
    {
      "name": "PublicUser",
      "description": ""
    },
    {
      "name": "Validations",
      "description": ""
    }
  ]
}