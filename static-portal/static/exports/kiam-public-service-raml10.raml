#%RAML 1.0
title: Kiam Public Service
version: 1.0.0
baseUri: https://kiamservice-public.prod.kiam.postag.azureabnprod.postag.intern
baseUriParameters: {}
protocols:
- HTTPS
types:
  AddressForDuplicateValidation:
    displayName: AddressForDuplicateValidation
    type: object
    properties:
      countryIsoAlpha2Code:
        required: false
        displayName: countryIsoAlpha2Code
        type:
        - string
        - nil
      postalCode:
        required: false
        displayName: postalCode
        type:
        - string
        - nil
      city:
        required: false
        displayName: city
        type:
        - string
        - nil
      street:
        required: false
        displayName: street
        type:
        - string
        - nil
      doorNumber:
        required: false
        displayName: doorNumber
        type:
        - string
        - nil
      houseNumber:
        required: false
        displayName: houseNumber
        type:
        - string
        - nil
  ConfirmRegistrationRequest:
    displayName: ConfirmRegistrationRequest
    type: object
    properties:
      token:
        required: false
        displayName: token
        type:
        - string
        - nil
      applicationName:
        required: false
        displayName: applicationName
        type:
        - string
        - nil
  CreateAddressRequest:
    displayName: CreateAddressRequest
    type: object
    properties:
      addressType:
        required: false
        displayName: addressType
        type:
        - integer
        - nil
        format: int32
      countryIsoAlpha2Code:
        required: false
        displayName: countryIsoAlpha2Code
        type:
        - string
        - nil
      postalCode:
        required: false
        displayName: postalCode
        type:
        - string
        - nil
      city:
        required: false
        displayName: city
        type:
        - string
        - nil
      street:
        required: false
        displayName: street
        type:
        - string
        - nil
      street2:
        required: false
        displayName: street2
        type:
        - string
        - nil
      doorNumber:
        required: false
        displayName: doorNumber
        type:
        - string
        - nil
      houseNumber:
        required: false
        displayName: houseNumber
        type:
        - string
        - nil
      postAddressCode:
        required: false
        displayName: postAddressCode
        type:
        - string
        - nil
  CreateCompanyRequest:
    displayName: CreateCompanyRequest
    type: object
    properties:
      user:
        required: false
        displayName: user
        type: CreateUserRequest
      companyName:
        required: false
        displayName: companyName
        type:
        - string
        - nil
      emailAddress:
        required: false
        displayName: emailAddress
        type:
        - string
        - nil
      phone:
        required: false
        displayName: phone
        type: Phone2
      mobile:
        required: false
        displayName: mobile
        type: Phone2
      mainAddress:
        required: false
        displayName: mainAddress
        type: CreateMainAddressRequest
      registrationSucceededCallbackUrl:
        required: false
        displayName: registrationSucceededCallbackUrl
        type:
        - string
        - nil
      uid:
        required: false
        displayName: uid
        type:
        - string
        - nil
      legalFormId:
        required: false
        displayName: legalFormId
        type:
        - integer
        - nil
        format: int32
      organizationNumber:
        required: false
        displayName: organizationNumber
        type:
        - string
        - nil
      sapDebitor:
        required: false
        displayName: sapDebitor
        type:
        - string
        - nil
  CreateMainAddressRequest:
    displayName: CreateMainAddressRequest
    type: object
    properties:
      countryIsoAlpha2Code:
        required: false
        displayName: countryIsoAlpha2Code
        type:
        - string
        - nil
      postalCode:
        required: false
        displayName: postalCode
        type:
        - string
        - nil
      city:
        required: false
        displayName: city
        type:
        - string
        - nil
      street:
        required: false
        displayName: street
        type:
        - string
        - nil
      street2:
        required: false
        displayName: street2
        type:
        - string
        - nil
      doorNumber:
        required: false
        displayName: doorNumber
        type:
        - string
        - nil
      houseNumber:
        required: false
        displayName: houseNumber
        type:
        - string
        - nil
      postAddressCode:
        required: false
        displayName: postAddressCode
        type:
        - string
        - nil
  CreateUserRequest:
    displayName: CreateUserRequest
    type: object
    properties:
      password:
        required: false
        displayName: password
        type:
        - string
        - nil
      username:
        required: false
        displayName: username
        type:
        - string
        - nil
      salutation:
        required: false
        displayName: salutation
        type:
        - string
        - nil
      firstname:
        required: false
        displayName: firstname
        type:
        - string
        - nil
      lastname:
        required: false
        displayName: lastname
        type:
        - string
        - nil
      birthdate:
        required: false
        displayName: birthdate
        type:
        - datetime
        - nil
      titleBeforeName:
        required: false
        displayName: titleBeforeName
        type:
        - string
        - nil
      titleAfterName:
        required: false
        displayName: titleAfterName
        type:
        - string
        - nil
      phone:
        required: false
        displayName: phone
        type: Phone2
      mobile:
        required: false
        displayName: mobile
        type: Phone2
      addresses:
        required: false
        displayName: addresses
        type:
        - array
        - nil
        items:
          type: CreateAddressRequest
      registrationSucceededCallbackUrl:
        required: false
        displayName: registrationSucceededCallbackUrl
        type:
        - string
        - nil
      registrationOrigin:
        required: false
        displayName: registrationOrigin
        type:
        - string
        - nil
      marketingAgreement:
        required: false
        displayName: marketingAgreement
        type:
        - boolean
        - nil
      newsletter:
        required: false
        displayName: newsletter
        type:
        - boolean
        - nil
  Phone2:
    displayName: Phone2
    type: object
    properties:
      countryCode:
        required: false
        displayName: countryCode
        type:
        - string
        - nil
      areaCode:
        required: false
        displayName: areaCode
        type:
        - string
        - nil
      number:
        required: false
        displayName: number
        type:
        - string
        - nil
  RegistrationConfirmationResponse:
    displayName: RegistrationConfirmationResponse
    type: object
    properties:
      callbackUrl:
        required: false
        displayName: callbackUrl
        type:
        - string
        - nil
  ResendRegistrationConfirmationRequest:
    displayName: ResendRegistrationConfirmationRequest
    type: object
    properties:
      username:
        required: false
        displayName: username
        type:
        - string
        - nil
      applicationName:
        required: false
        displayName: applicationName
        type:
        - string
        - nil
  StringFieldValue:
    displayName: StringFieldValue
    type: object
    properties:
      value:
        required: false
        displayName: value
        type:
        - string
        - nil
  ValidateForDuplicateUserRequest:
    displayName: ValidateForDuplicateUserRequest
    type: object
    properties:
      firstname:
        required: false
        displayName: firstname
        type:
        - string
        - nil
      lastname:
        required: false
        displayName: lastname
        type:
        - string
        - nil
      ssoId:
        required: false
        displayName: ssoId
        type:
        - integer
        - nil
        format: int32
      mainAddress:
        required: false
        displayName: mainAddress
        type: AddressForDuplicateValidation
  KiamProblemDetails:
    displayName: KiamProblemDetails
    type: object
    properties:
      type:
        required: false
        displayName: type
        type:
        - string
        - nil
      title:
        required: false
        displayName: title
        type:
        - string
        - nil
      status:
        required: false
        displayName: status
        type:
        - integer
        - nil
        format: int32
      detail:
        required: false
        displayName: detail
        type:
        - string
        - nil
      instance:
        required: false
        displayName: instance
        type:
        - string
        - nil
      error:
        required: false
        displayName: error
        type: Legacy.ErrorInfo
  Legacy.ErrorData:
    displayName: Legacy.ErrorData
    type: object
    properties:
      name:
        required: false
        displayName: name
        type:
        - string
        - nil
      value:
        required: false
        displayName: value
        type:
        - string
        - nil
  Legacy.ErrorInfo:
    displayName: Legacy.ErrorInfo
    type: object
    properties:
      code:
        required: false
        displayName: code
        type:
        - string
        - nil
      message:
        required: false
        displayName: message
        type:
        - string
        - nil
      target:
        required: false
        displayName: target
        type:
        - string
        - nil
      data:
        required: false
        displayName: data
        type:
        - array
        - nil
        items:
          type: Legacy.ErrorData
/companies:
  post:
    displayName: CreateCompanyWithBusinessUser
    description: ''
    body:
      application/json:
        displayName: body
        description: |
          Data of the newly created company and related user.

                       User salutation can have values M or W, M means male and W means female, X means other.

                       Possible values for users' address type: 1 or 2. 1 means main address, 2 means secondary address.

                       If password is not defined or is null, created user will receive an e-mail and will have to set password using received link.
        type: CreateCompanyRequest
    headers:
      Content-Type:
        required: true
        displayName: Content-Type
        type: string
        enum:
        - application/json
      captchaToken:
        required: false
        displayName: captchaToken
        description: This parameter is used to provide the captcha specific value for a token, solution or how else a parameter is called in a captcha solution.
        type: string
    responses:
      '200':
        description: User was created successfully.
        body: {}
      '400':
        description: "Invalid request.\r\n            \r\n             Usual invalid request response format:\r\n             Error code is validation_error. Information about the error can be found in the details field.\r\n             Target describes which field is invalid, validation error code defines the more detailed validation error case.\r\n             There could be multiple errors per field. See example response.\r\n            \r\n             List of error codes in format [error code] - [optional description] - [fields which can have this validation error] for user fields and company fields:\r\n            \r\n             Company fields\r\n            \r\n             required - company_name\r\n             invalid - company_legal_form_id, company_email_address, company_phone_country_code, company_phone_area_code, company_phone_number, company_mobile_country_code, company_mobile_area_code, company_mobile_number, company_countryIsoAlpha2Code\r\n            \r\n             User fields\r\n             \r\n             required -  Required field. - username, first_name, last_name, registration_origin\r\n             username_not_available - Username is already taken. - username\r\n             too_short - The input value is too short. - username, first_name, last_name\r\n             too_long - The input value is too long. - username, first_name, last_name\r\n             no_titles_allowed - No titles allowed, E.g. BSc. - first_name, last_name\r\n             no_company_types_allowed - No company types allowed. E.g. GmbH. - first_name, last_name\r\n             person_too_young - Person with specified birthdate is too young. - birthdate\r\n             invalid - first_name, last_name, username, phone_country_code, phone_area_code, phone_number, mobile_country_code, mobile_area_code, mobile_number, user_addressX_countryIsoAlpha2Code (where X is the index of the address in the array, starting from 0, e.G. user_address0_countryIsoAlpha2Code)\r\n             new_password_invalid - the new password is invalid - password\r\n             captcha_error - Invalid Captcha token."
        body: {}
/users:
  post:
    displayName: CreateUser
    description: ''
    body:
      application/json:
        displayName: body
        type: CreateUserRequest
    headers:
      Content-Type:
        required: true
        displayName: Content-Type
        type: string
        enum:
        - application/json
      captchaToken:
        required: false
        displayName: captchaToken
        type: string
    responses:
      '200':
        description: Success
        body: {}
/doubleOptIn:
  /initiate:
    post:
      displayName: ResendRegistrationConfirmation
      description: ''
      body:
        application/json:
          displayName: body
          description: Request with username (email address) of the user.
          type: ResendRegistrationConfirmationRequest
      headers:
        Content-Type:
          required: true
          displayName: Content-Type
          type: string
          enum:
          - application/json
      responses:
        '204':
          description: Registration confirmation e-mail was sent.
          body: {}
        '404':
          description: User with username was not found.
          body:
            application/json:
              displayName: response404
              description: ''
              type: KiamProblemDetails
        '409':
          description: An error occurred
          body:
            application/json:
              displayName: response409
              description: ''
              type: KiamProblemDetails
  /confirm:
    post:
      displayName: ConfirmRegistration
      description: ''
      body:
        application/json:
          displayName: body
          type: ConfirmRegistrationRequest
      headers:
        Content-Type:
          required: true
          displayName: Content-Type
          type: string
          enum:
          - application/json
      responses:
        '202':
          description: Registration confirmation token accepted. Response contains callback URL.
          body:
            application/json:
              displayName: response202
              description: ''
              type: RegistrationConfirmationResponse
        '200':
          description: Invalid, expired or already used registration confirmation token.
          body:
            application/json:
              displayName: response200
              description: ''
              type: KiamProblemDetails
/validations:
  /validateUsername:
    post:
      displayName: ValidateUsername
      description: ''
      body:
        application/json:
          displayName: body
          type: StringFieldValue
      headers:
        Content-Type:
          required: true
          displayName: Content-Type
          type: string
          enum:
          - application/json
      responses:
        '204':
          description: Value is valid.
          body: {}
        '200':
          description: "Value is invalid. Main error code is validation_error.\r\n            Detailed validation error codes can be found in the details field.\r\n            There could be multiple errors.\r\n            \r\n            List of error codes in format [error code] - [description]:\r\n            \r\n            required -  Required field.\r\n            invalid - Invalid format, username should be an email address.\r\n            too_short - The input value is too short.\r\n            too_long - The input value is too long.\r\n            username_not_available - Username is already taken."
          body:
            application/json:
              displayName: response200
              description: ''
              type: KiamProblemDetails
        '400':
          description: ''
          body:
            application/json:
              displayName: response400
              description: ''
              type: KiamProblemDetails
  /validateDuplicateUser:
    post:
      displayName: ValidateForDuplicateUser
      description: ''
      body:
        application/json:
          displayName: body
          type: ValidateForDuplicateUserRequest
      headers:
        Content-Type:
          required: true
          displayName: Content-Type
          type: string
          enum:
          - application/json
      responses:
        '204':
          description: Data is valid, it is not a duplicate user.
          body: {}
        '200':
          description: |
            Data is invalid, a user with the same data already exists. Main error code is validation_error.

                        Validation error code is duplicate_user
          body:
            application/json:
              displayName: response200
              description: ''
              type: KiamProblemDetails
        '400':
          description: Validation error code is duplicate_user
          body:
            application/json:
              displayName: response400
              description: ''
              type: KiamProblemDetails
